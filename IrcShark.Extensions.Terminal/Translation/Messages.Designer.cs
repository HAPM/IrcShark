//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.4927
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IrcShark.Extensions.Terminal.Translation {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IrcShark.Extensions.Terminal.Translation.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected extension is already loaded and running. ähnelt.
        /// </summary>
        internal static string ExtensionAlreadyLoaded {
            get {
                return ResourceManager.GetString("ExtensionAlreadyLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected extension isn&apos;t loaded. ähnelt.
        /// </summary>
        internal static string ExtensionNotLoaded {
            get {
                return ResourceManager.GetString("ExtensionNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use &quot;help [command]&quot; or &quot;[command] -? to get more informations  ähnelt.
        /// </summary>
        internal static string GetCommandDetails {
            get {
                return ResourceManager.GetString("GetCommandDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Listing all available commands: ähnelt.
        /// </summary>
        internal static string ListingAvailableCommands {
            get {
                return ResourceManager.GetString("ListingAvailableCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Listing all running extensions: ähnelt.
        /// </summary>
        internal static string ListingAvailableExtensions {
            get {
                return ResourceManager.GetString("ListingAvailableExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Listing loaded extensions: ähnelt.
        /// </summary>
        internal static string ListingRunningExtensions {
            get {
                return ResourceManager.GetString("ListingRunningExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug ähnelt.
        /// </summary>
        internal static string LogDebug {
            get {
                return ResourceManager.GetString("LogDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        internal static string LogError {
            get {
                return ResourceManager.GetString("LogError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Information ähnelt.
        /// </summary>
        internal static string LogInformation {
            get {
                return ResourceManager.GetString("LogInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        internal static string LogWarning {
            get {
                return ResourceManager.GetString("LogWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no available extension with this number. ähnelt.
        /// </summary>
        internal static string NoAvailableExtensionWithThisNumber {
            get {
                return ResourceManager.GetString("NoAvailableExtensionWithThisNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no loaded extension with this number. ähnelt.
        /// </summary>
        internal static string NoLoadedExtensionWithThisNumber {
            get {
                return ResourceManager.GetString("NoLoadedExtensionWithThisNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify the extension to load. ähnelt.
        /// </summary>
        internal static string SpecifyAnExtensionToLoad {
            get {
                return ResourceManager.GetString("SpecifyAnExtensionToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify an extension to unload. ähnelt.
        /// </summary>
        internal static string SpecifyAnExtensionToUnload {
            get {
                return ResourceManager.GetString("SpecifyAnExtensionToUnload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify a flag. ähnelt.
        /// </summary>
        internal static string SpecifyFlag {
            get {
                return ResourceManager.GetString("SpecifyFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknow command &quot;{0}&quot; ähnelt.
        /// </summary>
        internal static string UnknowCommand {
            get {
                return ResourceManager.GetString("UnknowCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown flag: {0} ähnelt.
        /// </summary>
        internal static string UnknownFlag {
            get {
                return ResourceManager.GetString("UnknownFlag", resourceCulture);
            }
        }
    }
}
